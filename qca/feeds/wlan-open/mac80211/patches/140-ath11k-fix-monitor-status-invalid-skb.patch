--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -3183,10 +3183,10 @@ static int ath11k_dp_rx_reap_mon_status_
 			spin_lock_bh(&rx_ring->idr_lock);
 			skb = idr_find(&rx_ring->bufs_idr, buf_id);
 			if (!skb) {
+				spin_unlock_bh(&rx_ring->idr_lock);
 				ath11k_warn(ab, "rx monitor status with invalid buf_id %d\n",
 					    buf_id);
-				spin_unlock_bh(&rx_ring->idr_lock);
-				continue;
+				goto move_next;
 			}
 
 			idr_remove(&rx_ring->bufs_idr, buf_id);
@@ -3205,19 +3205,23 @@ static int ath11k_dp_rx_reap_mon_status_
 			tlv = (struct hal_tlv_hdr *)skb->data;
 			if (FIELD_GET(HAL_TLV_HDR_TAG, tlv->tl) !=
 					HAL_RX_STATUS_BUFFER_DONE) {
-				ath11k_hal_srng_src_get_next_entry(ab, srng);
-				continue;
+				ath11k_warn(ab, "rx monitor status tlv %lu is not DONE\n",
+					    FIELD_GET(HAL_TLV_HDR_TAG, tlv->tl));
+				dev_kfree_skb_any(skb);
+				goto move_next;
 			}
 
 			__skb_queue_tail(skb_list, skb);
 		}
-
+move_next:
 		skb = ath11k_dp_rx_alloc_mon_status_buf(ab, rx_ring,
 							&buf_id, GFP_ATOMIC);
 
 		if (!skb) {
 			ath11k_hal_rx_buf_addr_info_set(rx_mon_status_desc, 0, 0,
 							HAL_RX_BUF_RBM_SW3_BM);
+			ath11k_warn(ab, "rx monitor status can't alloc skb for buf_id %d\n",
+				    buf_id);
 			num_buffs_reaped++;
 			break;
 		}
